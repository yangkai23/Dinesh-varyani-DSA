package dsa.list.singlylinkedlist;
import dsa.list.singlylinkedlist.SinglyLinkedList.Node.*;
public class AddTwoNumLeetCode {
public SinglyLinkedList addTwoNum(SinglyLinkedList l1,SinglyLinkedList l2) {
	StringBuilder num1=new StringBuilder();
    StringBuilder num2=new StringBuilder();
   while(l1!=null){
       num1.append(l1.data);
       l1=l1.next;
   }
   
    while(l2!=null){
    num2.append(l2.data);
       l2=l2.next;
   }
   num1=num1.reverse();
   num2=num2.reverse();
   long sum=Long.parseLong(num1.toString())+Long.parseLong(num2.toString());
   System.out.println(sum);
   SinglyLinkedList l3=null;
   SinglyLinkedList temp=null;
   if(sum==0){
       l3=new SinglyLinkedList((int)sum);
       return l3;
   }
   while(sum!=0){
       if(l3==null){
           l3= new SinglyLinkedList((int)sum%10);
           sum=sum/10;
           continue;
       }            temp=l3;
   while(temp.next!=null){
       temp=temp.next;
   }
          temp.next= new SinglyLinkedList((int)sum%10);
           sum=sum/10;
   } 
   return l3;

}
}
